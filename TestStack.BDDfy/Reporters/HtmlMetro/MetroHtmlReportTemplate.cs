// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 11.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace TestStack.BDDfy.Reporters.HtmlMetro
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using TestStack.BDDfy.Reporters.Html;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public partial class MetroHtmlReportTemplate : MetroHtmlReportTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\'utf-8\'/>\r\n\t<style type=\'tex" +
                    "t/css\'>\r\n\t");
            
            #line 12 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ReportCss));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n\t\t<!-- ");
            
            #line 14 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(HtmlReportResources.CustomStylesheetComment));
            
            #line default
            #line hidden
            this.Write(" -->\r\n");
            
            #line 15 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.CustomStylesheet ?? ""));
            
            #line default
            #line hidden
            this.Write("\r\n\t</style>\r\n\t\t<link href=\'http://fonts.googleapis.com/css?family=Roboto:400,300\'" +
                    " rel=\'stylesheet\' type=\'text/css\'>\r\n\t\t<title>BDDfy Test Result ");
            
            #line 18 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RunDate.ToShortDateString()));
            
            #line default
            #line hidden
            this.Write("</title>\r\n\t</head>\r\n\t<body>\r\n\t\t<div id=\'main\'>\r\n\r\n\t\t\t<section id=\'titles\'>\r\n\t\t\t\t<" +
                    "h1 class=\"blue\">");
            
            #line 24 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Configuration.ReportHeader));
            
            #line default
            #line hidden
            this.Write("</h1>\r\n\t\t\t\t<h3>");
            
            #line 25 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Configuration.ReportDescription));
            
            #line default
            #line hidden
            this.Write("</h3>\r\n\t\t\t</section>\r\n\t\t\r\n\t\t\t<section id=\'summaryTotals\' class=\'group\'>\t\t\t\t\r\n\t\t\t\t" +
                    "<div class=\'tiles\' >\r\n\t\t\t\t\t<div class=\'tilerow\'>\r\n\t\t\t\t\t\t<div id=\'storycount\' cla" +
                    "ss=\"tile tileNoHover two-h purplebg\">\r\n\t\t\t\t\t\t\t<h3>stories</h3>\r\n\t\t\t\t\t\t\t<h1>");
            
            #line 33 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Summary.Stories));
            
            #line default
            #line hidden
            this.Write("</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id=\'scenariocount\' class=\"tile tileNoHover two-h " +
                    "tealbg\">\r\n\t\t\t\t\t\t\t<h3>scenarios</h3>\r\n\t\t\t\t\t\t\t<h1>");
            
            #line 37 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Summary.Scenarios));
            
            #line default
            #line hidden
            this.Write("</h1>\r\n\t\t\t\t\t\t</div>\t\t\t\t\t  \r\n\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\'tilerow\'>\r\n\t\t\t\t\t\t" +
                    "<div class=\"tile tileNoHover one limebg\">\r\n\t\t\t\t\t\t\t<h4>PASSED</h4>\r\n\t\t\t\t\t\t\t<h1>");
            
            #line 43 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Summary.Passed));
            
            #line default
            #line hidden
            this.Write("</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"tile tileNoHover one redbg\">\r\n\t\t\t\t\t\t\t<h4>F" +
                    "AILED</h4>\r\n\t\t\t\t\t\t\t<h1>");
            
            #line 47 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Summary.Failed));
            
            #line default
            #line hidden
            this.Write("</h1>\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"tile tileNoHover one orangebg\">\r\n\t\t" +
                    "\t\t\t\t\t<h4>INCONCLUSIVE</h4>\r\n\t\t\t\t\t\t\t<h1>");
            
            #line 51 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Summary.Inconclusive));
            
            #line default
            #line hidden
            this.Write("</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"tile tileNoHover one bluebg\">\r\n\t\t\t\t\t\t\t<h4>" +
                    "NOT IMPLEMENTED</h4>\r\n\t\t\t\t\t\t\t<h1>");
            
            #line 55 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Model.Summary.NotImplemented));
            
            #line default
            #line hidden
            this.Write(@"</h1>				
						</div>			
					</div>		
				</div>		
			</section> 		
	  
			<section id='resultOptions' class='group'>	  
				<h3>options</h3>
	  
				<ul id='filterOptions'>         
					<li class=""Passed"">
						<input id=""passedFilter"" type=""checkbox"" checked="""" data-target-class=""Passed"">
						<label for=""passedFilter"">passed</label>
					</li>		  
					<li class=""Failed"">
						<input id=""failedFilter"" type=""checkbox"" checked="""" data-target-class=""Failed"">
						<label for=""failedFilter"">failed</label>
					</li>
					<li class=""Inconclusive"">
						<input id=""inconclusiveFilter"" type=""checkbox"" checked="""" data-target-class=""Inconclusive"">
						<label for=""inconclusiveFilter"">inconclusive</label>
					</li>		  		  
					<li  class=""NotImplemented"">
						<input id=""notImplementedFilter"" type=""checkbox"" checked="""" data-target-class=""NotImplemented"">
						<label for=""notImplementedFilter"">not implemented</label>
					</li>		  		  
				</ul>	  
			</section>
	  
			<section id='testResults'>
				<div id='expandCollapse' class='group'>
					<h2 style=""float: left"">results</h2>      
					<a href=""#"" class='expandAll'>show steps</a>
					<a href=""#"" class='collapseAll'>hide steps</a>           
				</div>

				<ul class='testResult'>
				
");
            
            #line 93 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 foreach (var story in Model.Stories) 
{ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<div class=\'story ");
            
            #line 96 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(story.Result));
            
            #line default
            #line hidden
            this.Write("\'>\r\n\t\t\t\t\t\t\t<div class=\'storyMetaData\'>\r\n");
            
            #line 98 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 if (story.Metadata == null)
{ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t<h3 class=\'namespaceName\'>");
            
            #line 100 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(story.Namespace));
            
            #line default
            #line hidden
            this.Write("</h3>\r\n");
            
            #line 101 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 }
else
{ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t<h3 class=\'storyTitle\'>");
            
            #line 104 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(story.Metadata.Title));
            
            #line default
            #line hidden
            this.Write("</h3>\r\n");
            
            #line 105 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 } 
            
            #line default
            #line hidden
            
            #line 106 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 if (story.Metadata != null && !string.IsNullOrEmpty(story.Metadata.Narrative1))
{ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t<ul class=\'storyNarrative\'>\r\n\t\t\t\t\t\t\t\t\t<li>");
            
            #line 109 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(story.Metadata.Narrative1));
            
            #line default
            #line hidden
            this.Write("</li>\r\n\t\t\t\t\t\t\t\t\t<li>");
            
            #line 110 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(story.Metadata.Narrative2));
            
            #line default
            #line hidden
            this.Write("</li>\r\n\t\t\t\t\t\t\t\t\t<li>");
            
            #line 111 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(story.Metadata.Narrative3));
            
            #line default
            #line hidden
            this.Write("</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n");
            
            #line 113 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 } // end if narrative lines 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t</div>\r\n\r\n");
            
            #line 116 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"

								var scenariosInGroup = story.Scenarios.ToList();
								var storyResult = (Result)scenariosInGroup.Max(s => (int)s.Result);

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t<div class=\'scenarios\'>\r\n");
            
            #line 121 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 foreach (var scenario in scenariosInGroup)
{ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t<div class=\'scenario\'>\r\n\t\t\t\t\t\t\t\t\t<div class=\'");
            
            #line 124 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(scenario.Result));
            
            #line default
            #line hidden
            this.Write(" canToggle scenarioTitle\' data-toggle-target=\'");
            
            #line 124 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(scenario.Id));
            
            #line default
            #line hidden
            this.Write("\'>");
            
            #line 124 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(scenario.Title));
            
            #line default
            #line hidden
            this.Write("</div>\r\n\t\t\t\t\t\t\t\t\t\t<ul class=\'steps\' id=\'");
            
            #line 125 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(scenario.Id));
            
            #line default
            #line hidden
            this.Write("\'>\r\n");
            
            #line 126 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 foreach (var step in scenario.Steps.Where(s => s.ShouldReport))
											{ 
												string stepClass = string.Empty;
												var reportException = step.Exception != null && step.Result == Result.Failed;
												string canToggle = reportException ? "canToggle" : string.Empty;

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\t\t\t<li class=\'step ");
            
            #line 132 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(step.Result));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 132 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stepClass));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 132 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(step.ExecutionOrder));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 132 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(canToggle));
            
            #line default
            #line hidden
            this.Write("\' data-toggle-target=\'");
            
            #line 132 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(step.Id));
            
            #line default
            #line hidden
            this.Write("\' >\r\n");
            
            #line 133 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"

											var titleLines = step.Title.Split(new[] {Environment.NewLine}, StringSplitOptions.None);
											var title = titleLines[0];
											if (reportException)
											{
												stepClass = step.Result + "Exception";
												if (!string.IsNullOrEmpty(step.Exception.Message))
												{
													title += " [Exception Message: '" + step.Exception.Message + "']";
												}
											}

            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\t\t\t\t<span>");
            
            #line 145 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(title));
            
            #line default
            #line hidden
            this.Write("</span>\r\n");
            
            #line 146 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 for (int i = 1; i < titleLines.Length; i++)
{ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\'step-title-extra-lines\'>");
            
            #line 148 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(titleLines[i]));
            
            #line default
            #line hidden
            this.Write("</div>\r\n");
            
            #line 149 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
} // foreach title lines 
            
            #line default
            #line hidden
            
            #line 150 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 if (reportException)
{ 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\t\t\t\t<div class=\'step ");
            
            #line 152 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(stepClass));
            
            #line default
            #line hidden
            this.Write("\' id=\'");
            
            #line 152 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(step.Id));
            
            #line default
            #line hidden
            this.Write("\'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<code>");
            
            #line 153 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(step.Exception.StackTrace ?? ""));
            
            #line default
            #line hidden
            this.Write("</code>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
            
            #line 155 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 } // end if report exception 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\t\t\t</li>\r\n");
            
            #line 157 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 } // end foreach step 
            
            #line default
            #line hidden
            this.Write("\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div> ");
            
            #line 159 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 // end scenario 
            
            #line default
            #line hidden
            
            #line 160 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 } // end for each scenario 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t\t</div> ");
            
            #line 162 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 // end scenarios 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t\t\t</div> ");
            
            #line 164 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 // end story 
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 166 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 } // end for each story 
            
            #line default
            #line hidden
            this.Write("\r\n\t\t\t\t</ul>\r\n\t\t\t</section>\r\n    \r\n\t\t\t<section>\r\n\t\t\t\t<p>Tested at: ");
            
            #line 172 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(RunDate));
            
            #line default
            #line hidden
            this.Write("</p>\r\n\t\t\t\t<p>Powered by <a href=\'https://github.com/TestStack/TestStack.BDDfy\'>BD" +
                    "Dfy</a></p>\r\n\t\t\t</section>\t\t\r\n\t\t\r\n\t\t</div> ");
            
            #line 176 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 // end div main 
            
            #line default
            #line hidden
            this.Write("\t\r\n\r\n");
            
            #line 179 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 if (Model.Configuration.ResolveJqueryFromCdn) 
{ 
            
            #line default
            #line hidden
            this.Write("\t\t<script type=\'text/javascript\' src=\'http://code.jquery.com/jquery-2.1.0.min.js\'" +
                    "></script>\r\n");
            
            #line 182 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 } 
else 
{ 
            
            #line default
            #line hidden
            this.Write("\t\t<script type=\'text/javascript\'>\r\n");
            
            #line 186 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(HtmlReportResources.jquery_2_1_0_min));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t</script>\r\n");
            
            #line 188 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
 } 
            
            #line default
            #line hidden
            this.Write("\t\t<script>\r\n");
            
            #line 190 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ReportJs));
            
            #line default
            #line hidden
            this.Write("\r\n\t\t</script>\r\n\t\t<script>\r\n\t\t\t<!-- ");
            
            #line 193 "C:\dev\Community\Teststack\bddfy\TestStack.BDDfy\TestStack.BDDfy\Reporters\HtmlMetro\MetroHtmlReportTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(HtmlReportResources.CustomJavascriptComment));
            
            #line default
            #line hidden
            this.Write(" -->\r\n    </script>\r\n  </body>\r\n</html>");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public class MetroHtmlReportTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
