<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\xunit.runner.visualstudio.2.0.0-rc1-build1030\build\net20\xunit.runner.visualstudio.props" Condition="Exists('..\packages\xunit.runner.visualstudio.2.0.0-rc1-build1030\build\net20\xunit.runner.visualstudio.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{357B22FF-84E9-4AB4-AADF-6B9DBB76FB32}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>TestStack.BDDfy.Tests</RootNamespace>
    <AssemblyName>TestStack.BDDfy.Tests</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
    <NuGetPackageImportStamp>1ff05bc7</NuGetPackageImportStamp>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE;$(DefineConstants)</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE;$(DefineConstants)</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'ReleaseNET35|AnyCPU'">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="ApprovalTests, Version=3.0.0.0, Culture=neutral, PublicKeyToken=11bd7d124fc62e0f, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\ApprovalTests.3.0.7\lib\net40\ApprovalTests.dll</HintPath>
    </Reference>
    <Reference Include="ApprovalUtilities, Version=3.0.0.0, Culture=neutral, PublicKeyToken=11bd7d124fc62e0f, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\ApprovalUtilities.3.0.7\lib\net35\ApprovalUtilities.dll</HintPath>
    </Reference>
    <Reference Include="NSubstitute, Version=1.8.1.0, Culture=neutral, PublicKeyToken=92dd2e9066daa5ca, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\NSubstitute.1.8.1.0\lib\net45\NSubstitute.dll</HintPath>
    </Reference>
    <Reference Include="Shouldly, Version=2.3.1.0, Culture=neutral, PublicKeyToken=6042cbcb05cbc941, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\Shouldly.2.3.1\lib\net40\Shouldly.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="xunit">
      <HintPath>..\packages\xunit.1.9.2\lib\net20\xunit.dll</HintPath>
    </Reference>
    <Reference Include="xunit.extensions">
      <HintPath>..\packages\xunit.extensions.1.9.2\lib\net20\xunit.extensions.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Arguments\ArgumentsProvidedForGiven.cs" />
    <Compile Include="Arguments\ArgumentsProvidedForThen.cs" />
    <Compile Include="Arguments\MultipleArgumentsProvidedForTheSameStep.cs" />
    <Compile Include="Configuration\EmptyScenario.cs" />
    <Compile Include="Configuration\SequentialKeyGeneratorTests.cs" />
    <Compile Include="Configuration\StepExecutorTests.cs" />
    <Compile Include="Configuration\TestRunnerTests.cs" />
    <Compile Include="Exceptions\ExceptionsWhenUsingExamples.cs" />
    <Compile Include="ModuleInitializer.cs" />
    <Compile Include="Reporters\ReportModelMapperTests.cs" />
    <Compile Include="Reporters\TextReporter\TextReporterTests.cs" />
    <Compile Include="Reporters\Html\MetroReportBuilderTests.cs" />
    <Compile Include="Processors\TestRunnerTests.cs" />
    <Compile Include="Reporters\Html\ClassicReportBuilderTests.cs" />
    <Compile Include="Reporters\Html\HtmlReporterTests.cs" />
    <Compile Include="Reporters\Html\TemporaryCulture.cs" />
    <Compile Include="Reporters\Html\TestableHtmlReporter.cs" />
    <Compile Include="Reporters\ReportApprover.cs" />
    <Compile Include="Scanner\Examples\ExampleActionTests.cs" />
    <Compile Include="Scanner\FluentScanner\ComplexStepsTests.cs" />
    <Compile Include="Scanner\FluentScanner\DoesNotConflictWithnSubstitute.cs" />
    <Compile Include="Scanner\Examples\FluentWithExamples.cs" />
    <Compile Include="Scanner\FluentScanner\InlineAssertions.cs" />
    <Compile Include="Scanner\FluentScanner\StepTitleTests.cs" />
    <Compile Include="Scanner\FluentScanner\PrependStepTypeTests.cs" />
    <Compile Include="Scanner\Examples\ReflectiveWithExamples.cs" />
    <Compile Include="Scanner\Examples\ExampleTableTests.cs" />
    <Compile Include="Scanner\Examples\ExampleValueTests.cs" />
    <Compile Include="Scanner\ReflectiveScanner\WhenStepScannerFactoryAsyncMethods.cs" />
    <Compile Include="Configuration\CustomProcessor.cs" />
    <Compile Include="Configuration\BatchProcessorsTests.cs" />
    <Compile Include="Configuration\ProcessorPipelineTests.cs" />
    <Compile Include="Disposer\DisposingScenarios.cs" />
    <Compile Include="Exceptions\OtherExceptions\WhenResolvingExceptionsFromDifferentScanners.cs" />
    <Compile Include="Exceptions\ThrowingMethods.cs" />
    <Compile Include="Exceptions\WhenAnInconclusiveTestIsRun.cs" />
    <Compile Include="Exceptions\ExceptionThrowingTest.cs" />
    <Compile Include="Scanner\FluentScanner\BDDfyUsingFluentApi.cs" />
    <Compile Include="Scanner\FluentScanner\ScenarioToBeScannedUsingFluentScanner.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="Scanner\FluentScanner\WhenStepsAreScannedUsingFluentScanner.cs">
      <SubType>Code</SubType>
    </Compile>
    <Compile Include="NetToStringTests.cs" />
    <Compile Include="Reporters\Diagnostics\DiagnosticsReportBuilderTests.cs" />
    <Compile Include="Reporters\Diagnostics\WhenBuildingReportDiagnostics.cs" />
    <Compile Include="Reporters\Diagnostics\DiagnosticsReporterTests.cs" />
    <Compile Include="Reporters\MarkDown\MarkDownReportBuilderTests.cs" />
    <Compile Include="Reporters\MarkDown\MarkDownReporterTests.cs" />
    <Compile Include="Reporters\ReportTestData.cs" />
    <Compile Include="Scanner\ReflectiveScanner\ExecutableAttributeOrderOrdersTheStepsCorrectly.cs" />
    <Compile Include="Scanner\ReflectiveScanner\PropertiesAreNotConsideredAsStepsEvenWhenTheirNameMatchesConventions.cs" />
    <Compile Include="Scanner\FluentScanner\ExpressionExtensionsTests.cs" />
    <Compile Include="Scanner\ReflectiveScanner\StepScannerExtensions.cs" />
    <Compile Include="Scanner\ReflectiveScanner\DefaultScanForStepsByMethodNameTests.cs" />
    <Compile Include="Scanner\ReflectiveScanner\ExecutableAttributeScannerTests.cs" />
    <Compile Include="Scanner\ReflectiveScanner\WhenCombinationOfExecutableAttributeAndMethodNamingConventionIsUsed.cs" />
    <Compile Include="Scanner\ReflectiveScanner\WhenStepsAreDefinedInABaseClass.cs" />
    <Compile Include="Scanner\ReflectiveScanner\WhenStepsReturnTheirText.cs" />
    <Compile Include="Stories\CanUseACustomStoryAttribute.cs" />
    <Compile Include="Stories\WhenAStoryHasUriAndImageMetadata.cs" />
    <Compile Include="Stories\WhenStoryAttibuteMissesDuplicateTextsInProperties.cs" />
    <Compile Include="Stories\WhenStoryAttibuteMissesSoThatTextInSoThatProperty.cs" />
    <Compile Include="Stories\WhenStoryAttibuteMissesIWantTextInIWantProperty.cs" />
    <Compile Include="Stories\WhenStoryAttibuteMissesAsATextInAsAProperty.cs" />
    <Compile Include="Stories\StoryCanBeSpecifiedInReflectiveMode.cs" />
    <Compile Include="Stories\DummyScenario.cs" />
    <Compile Include="Stories\SharedStoryNotion.cs" />
    <Compile Include="Stories\StoryCanBeSpecifiedInFluentMode.cs" />
    <Compile Include="Stories\StoryClassBase.cs" />
    <Compile Include="Stories\StoryDouble.cs" />
    <Compile Include="Helpers.cs" />
    <Compile Include="Exceptions\NotImplementedException\WhenGivenThrowsNotImplementedException.cs" />
    <Compile Include="Exceptions\NotImplementedException\NotImplementedExceptionBase.cs" />
    <Compile Include="Exceptions\NotImplementedException\WhenThenThrowsNotImplementedException.cs" />
    <Compile Include="Exceptions\NotImplementedException\WhenWhenThrowsNotImplementedException.cs" />
    <Compile Include="Exceptions\OtherExceptions\WhenGivenThrowsException.cs" />
    <Compile Include="Exceptions\OtherExceptions\OtherExceptionBase.cs" />
    <Compile Include="Exceptions\OtherExceptions\WhenThenThrowsException.cs" />
    <Compile Include="Exceptions\OtherExceptions\WhenWhenThrowsException.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Scanner\ReflectiveScanner\WhenMethodNamesFollowNamingConventionsOtherThanGivenWhenThen.cs" />
    <Compile Include="Scanner\ReflectiveScanner\WhenTestClassFollowsGivenWhenThenNamingConvention.cs" />
    <Compile Include="Scanner\ReflectiveScanner\WhenTestClassUsesExecutableAttributes.cs" />
    <Compile Include="Stories\StoryClassAndScenarioClassAreTheSame.cs" />
    <Compile Include="Stories\StorySubclass.cs" />
    <Compile Include="TagsTests.cs" />
    <Compile Include="UnusedExampleValueScenario.cs" />
    <Compile Include="WhenAnEmptyScenarioIsBddified.cs" />
    <Compile Include="WhenAnEmptyStoryIsBddified.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Reporters\Html\ClassicReportBuilderTests.ShouldProduceExpectedHtml.approved.txt" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\TestStack.BDDfy\TestStack.BDDfy.csproj">
      <Project>{da6bcb39-307c-4a8e-9a3a-27bb2dbc44a3}</Project>
      <Name>TestStack.BDDfy</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Reporters\Html\MetroReportBuilderTests.ShouldProduceExpectedHtml.approved.txt" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="FodyWeavers.xml" />
    <Content Include="Reporters\Html\ClassicReportBuilderTests.ShouldProduceExpectedHtmlWithExamples.approved.txt" />
    <Content Include="Reporters\Html\MetroReportBuilderTests.ShouldProduceExpectedHtmlWithExamples.approved.txt" />
    <Content Include="Reporters\MarkDown\MarkDownReportBuilderTests.ShouldProduceExpectedMarkdown.approved.txt" />
    <Content Include="Reporters\MarkDown\MarkDownReportBuilderTests.ShouldProduceExpectedMarkdownWithExamples.approved.txt" />
    <Content Include="Reporters\TextReporter\TextReporterTests.ShouldProduceExpectedTextWithExamples.approved.txt" />
    <Content Include="Reporters\TextReporter\TextReporterTests.ShouldProduceExpectedReport.approved.txt" />
    <Content Include="Scanner\Examples\ReflectiveWithExamples.Run.approved.txt" />
    <Content Include="Scanner\Examples\FluentWithExamples.FluentCanBeUsedWithExamples.approved.txt" />
    <Content Include="Scanner\Examples\FluentWithExamples.Inline.approved.txt" />
    <Content Include="Scanner\FluentScanner\PrependStepTypeTests.VerifyPrependStepTitles.approved.txt" />
    <Content Include="TagsTests.TagsAreReportedInHtmlReport.approved.txt" />
    <Content Include="TagsTests.TagsAreReportedInTextReport.approved.txt" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\xunit.runner.visualstudio.2.0.0-rc1-build1030\build\net20\xunit.runner.visualstudio.props')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\xunit.runner.visualstudio.2.0.0-rc1-build1030\build\net20\xunit.runner.visualstudio.props'))" />
    <Error Condition="!Exists('..\packages\Fody.1.26.4\build\Fody.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Fody.1.26.4\build\Fody.targets'))" />
  </Target>
  <Import Project="..\packages\Fody.1.26.4\build\Fody.targets" Condition="Exists('..\packages\Fody.1.26.4\build\Fody.targets')" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>